name: Build and Release

on:
  push:
    branches: [ master, main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '9.0.x'
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal --logger trx --results-directory TestResults

    - name: Publish Optimized
      run: |
        dotnet publish SteamIconFixer/SteamIconFixer.csproj `
          --configuration Release `
          --runtime win-x64 `
          --self-contained `
          -p:PublishSingleFile=true `
          -p:PublishTrimmed=true `
          -p:TrimMode=partial `
          -p:PublishReadyToRun=true `
          -p:DebugType=none `
          -p:DebugSymbols=false `
          -p:EnableCompressionInSingleFile=true `
          --output artifacts/publish/optimized

    - name: Publish Full
      run: |
        dotnet publish SteamIconFixer/SteamIconFixer.csproj `
          --configuration Release `
          --runtime win-x64 `
          --self-contained `
          -p:PublishSingleFile=true `
          -p:PublishTrimmed=false `
          -p:PublishReadyToRun=true `
          -p:DebugType=none `
          -p:DebugSymbols=false `
          --output artifacts/publish/full

    - name: Create Package
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        $version = "${{ github.ref_name }}".TrimStart('v')
        $packageDir = "SteamIconFixer-v$version"
        New-Item -ItemType Directory -Path $packageDir
        
        Copy-Item artifacts/publish/optimized/SteamIconFixer.exe -Destination $packageDir/
        Copy-Item artifacts/publish/full/SteamIconFixer.exe -Destination $packageDir/SteamIconFixer-full.exe
        Copy-Item README.md -Destination $packageDir/
        Copy-Item LICENSE -Destination $packageDir/
        
        Compress-Archive -Path $packageDir/* -DestinationPath "SteamIconFixer-v$version.zip"
        
        # Generate checksums
        Get-FileHash "SteamIconFixer-v$version.zip" -Algorithm SHA256 | 
          Select-Object -ExpandProperty Hash | 
          Out-File "SteamIconFixer-v$version.sha256"

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          artifacts/publish/optimized/SteamIconFixer.exe
          artifacts/publish/full/SteamIconFixer.exe
          SteamIconFixer-*.zip
          SteamIconFixer-*.sha256

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          SteamIconFixer-*.zip
          SteamIconFixer-*.sha256
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}